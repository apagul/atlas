#!/usr/bin/env python3
import argparse
import os
import sys
import websockets
import asyncio
from os.path import dirname, realpath
import yaml

#################### CREATE COMMAND LINE ARGUMENT PARSER #######################
parser = argparse.ArgumentParser(description='Directly control the telescope via WebSockets')
parser.add_argument('--message', '-m', help="The command to be sent", type=str, required=True)
parser.add_argument('--host', help="Override the destination host for the WebSocket connection",
                    type=str, default=None)

######################### PARSE COMMAND LINE ARGUMENTS #########################
ARGS = parser.parse_args()

######################### IMPORT CONFIGURATION PARAMETERS ######################
config_dir = dirname(dirname(realpath(__file__))) ## locate file containing config
try:
    with open(config_dir+"/config.yaml", 'r') as config_file:
        try:
            config = yaml.safe_load(config_file)
        except yaml.YAMLError as exception:
            print("\033[1;31mInvalid YAML configuration file; please check syntax...\033[0m")
            print(sys.exc_info())
            exit(-1)
except:
    print("\033[1;31mUnable to locate config.yaml; please make sure that it exists...\033[0m")
    print(sys.exc_info())
    exit(-1)


# check if alternative host was specified
if ARGS.host is not None:
    config['server']['host'] = ARGS.host

######################### OPEN WEBSOCKET TO HOST #########################

async def send_msg():
    # create websocket address
    address = 'ws://'+config['server']['host']+':'+str(config['server']['websocket_port'])

    # connect to destination
    async with websockets.connect(address) as websocket:

        print("Successfully opened WebSocket to host")
        await websocket.send(ARGS.message)
        print("Successfully sent message!")

try:
    asyncio.get_event_loop().run_until_complete(send_msg())
except:
    print("Unable to create WebSocket with host...")
